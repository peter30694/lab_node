<%- include('../includes/head.ejs') %>
<body class="bg-gradient-to-br from-pink-50 to-purple-100 font-roboto min-h-screen">
<%
  var _favorites = typeof favorites !== 'undefined' ? favorites : [];
  var _cartCount = typeof cartCount !== 'undefined' ? cartCount : 0;
%>
<%- include('../includes/navigation.ejs', { favorites: _favorites, cartCount: _cartCount }) %>
<main class="max-w-7xl mx-auto px-4 py-10">
    <!-- Header Section -->
    <section class="mb-12 text-center px-4">
        <div class="flex flex-col items-center justify-center gap-6 max-w-4xl mx-auto">
            <div class="bg-gradient-to-r from-pink-500 to-purple-600 text-white rounded-full p-6 shadow-2xl mb-4 transform hover:scale-105 transition-all duration-300">
                <i class="ri-heart-line text-4xl"></i>
            </div>
            <h1 class="text-4xl md:text-5xl font-bold text-pink-600 mb-4">Sản phẩm yêu thích</h1>
            <p class="max-w-2xl text-gray-600 text-lg leading-relaxed">Khám phá và quản lý những sản phẩm bạn đã yêu thích, dễ dàng theo dõi và mua sắm những món đồ phù hợp nhất.</p>
        </div>
    </section>
    
    <% if (products && products.length > 0) { %>
        <!-- Header với nút xóa tất cả -->
        <div class="mb-8 flex flex-col sm:flex-row justify-between items-center gap-4" id="favorites-header">
            <h2 class="text-2xl font-bold text-gray-800 flex items-center gap-3">
                <i class="ri-heart-fill text-pink-500"></i>
                Danh sách yêu thích 
                <span id="favorites-count-badge" class="bg-gradient-to-r from-pink-500 to-purple-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                    <%= products.length %> sản phẩm
                </span>
            </h2>
            <button type="button" id="clear-all-favorites-btn" onclick="clearAllFavorites()" 
                    class="px-6 py-3 bg-gradient-to-r from-red-500 to-pink-500 text-white rounded-xl hover:from-red-600 hover:to-pink-600 transition-all duration-300 font-semibold flex items-center gap-2 shadow-lg hover:shadow-xl transform hover:scale-105">
                <i class="ri-delete-bin-line"></i>
                <span>Xóa tất cả</span>
            </button>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="favorites-grid">
            <% for (var i = 0; i < products.length; i++) { 
                var product = products[i]; %>
                <div class="bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 p-6 flex flex-col h-full border border-gray-100 transform hover:-translate-y-2" data-product-id="<%= product._id %>">
                    <div class="relative mb-4 group">
                        <img src="<%= product.imageUrl %>" alt="<%= product.title %>" 
                             class="h-48 w-full object-cover rounded-xl shadow-md group-hover:shadow-lg transition-all duration-300">
                        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <button type="button" onclick="toggleFavorite('<%= product._id %>', this)" 
                                class="absolute top-3 right-3 bg-gradient-to-r from-pink-500 to-purple-600 text-white p-3 rounded-full hover:from-pink-600 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-110 opacity-0 group-hover:opacity-100">
                            <i class="ri-heart-fill text-lg"></i>
                        </button>
                        <div class="absolute top-3 left-3">
                            <span class="bg-green-500 text-white text-xs px-2 py-1 rounded-full font-semibold">
                                <i class="ri-check-line mr-1"></i>Có sẵn
                            </span>
                        </div>
                    </div>
                    <div class="flex-1">
                        <h3 class="font-bold text-lg mb-3 text-gray-900 line-clamp-2 hover:text-pink-600 transition-colors cursor-pointer">
                            <%= product.title %>
                        </h3>
                        <p class="text-gray-600 text-sm mb-4 line-clamp-3 leading-relaxed">
                            <%= product.description %>
                        </p>
                        <div class="flex items-center justify-between mb-4">
                            <div class="text-2xl font-bold text-pink-600">
                                <%= (typeof product.price === 'number' ? product.price.toLocaleString('vi-VN') : product.price) %> đ
                            </div>
                            <div class="flex items-center text-yellow-500">
                                <i class="ri-star-fill"></i>
                                <i class="ri-star-fill"></i>
                                <i class="ri-star-fill"></i>
                                <i class="ri-star-fill"></i>
                                <i class="ri-star-half-fill"></i>
                                <span class="text-gray-500 text-sm ml-1">(4.5)</span>
                            </div>
                        </div>
                    </div>
                    <div class="mt-auto space-y-3">
                        <button type="button" onclick="addToCart('<%= product._id %>')" 
                                class="w-full px-4 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all duration-300 font-semibold flex items-center justify-center gap-2 shadow-md hover:shadow-lg transform hover:-translate-y-1">
                            <i class="ri-shopping-cart-line"></i>
                            <span>Thêm vào giỏ</span>
                        </button>
                        <button type="button" onclick="toggleFavorite('<%= product._id %>', this)" 
                                class="w-full px-4 py-3 border-2 border-pink-300 text-pink-600 hover:bg-pink-50 hover:border-pink-400 transition-all duration-300 font-semibold flex items-center justify-center gap-2 rounded-xl transform hover:-translate-y-1">
                            <i class="ri-heart-fill"></i>
                            <span>Bỏ yêu thích</span>
                        </button>
                    </div>
                </div>
            <% } %>
        </div>
    <% } %>
    <!-- Đảm bảo không có dấu ngoặc nhọn hoặc dấu ngoặc đơn bị thiếu phía trên -->
    <div class="bg-white rounded-2xl shadow-2xl p-12 text-center border border-gray-100" id="empty-favorites" style="<%= products && products.length > 0 ? 'display:none;' : '' %>">
        <div class="bg-gradient-to-r from-pink-100 to-purple-100 rounded-full w-24 h-24 mx-auto mb-8 flex items-center justify-center shadow-lg">
            <i class="ri-heart-line text-4xl text-pink-400"></i>
        </div>
        <h2 class="text-3xl font-bold text-gray-800 mb-4">Chưa có sản phẩm yêu thích</h2>
        <p class="text-gray-600 mb-8 text-lg leading-relaxed">Bạn chưa có sản phẩm yêu thích nào. Hãy khám phá và thêm những sản phẩm bạn thích!</p>
        <a href="/products" 
           class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-pink-600 to-purple-600 text-white rounded-xl hover:from-pink-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 font-bold">
            <i class="ri-shopping-bag-line mr-3 text-xl"></i>
            <span class="text-lg">Khám phá sản phẩm</span>
        </a>
    </div>
</main>

<script>
// Update favorites count badges
function updateFavoritesCount(count) {
    const favoritesLinks = document.querySelectorAll('a[href="/favorites"]');
    favoritesLinks.forEach(link => {
        let badge = link.querySelector('div span');
        
        // Nếu chưa có badge và count > 0, tạo badge mới
        if (!badge && count > 0) {
            const div = link.querySelector('div');
            if (div) {
                badge = document.createElement('span');
                badge.className = 'absolute -top-2 -right-2 bg-gradient-to-r from-pink-500 to-rose-500 text-white text-xs font-semibold rounded-full min-w-[20px] h-5 px-1.5 flex items-center justify-center shadow-lg border-2 border-white transform scale-100 group-hover:scale-110 transition-all duration-300';
                div.appendChild(badge);
            }
        }
        
        if (badge) {
            if (count > 0) {
                badge.textContent = count > 99 ? '99+' : count;
                badge.style.display = 'flex';
            } else {
                badge.style.display = 'none';
            }
        }
    });
}

// Update cart count badges
function updateCartCount(count) {
    const cartLinks = document.querySelectorAll('a[href="/cart"]');
    cartLinks.forEach(link => {
        let badge = link.querySelector('div span');
        
        // Nếu chưa có badge và count > 0, tạo badge mới
        if (!badge && count > 0) {
            const div = link.querySelector('div');
            if (div) {
                badge = document.createElement('span');
                badge.className = 'absolute -top-2 -right-2 bg-gradient-to-r from-red-500 to-pink-500 text-white text-xs font-semibold rounded-full min-w-[20px] h-5 px-1.5 flex items-center justify-center shadow-lg border-2 border-white transform scale-100 group-hover:scale-110 transition-all duration-300';
                div.appendChild(badge);
            }
        }
        
        if (badge) {
            if (count > 0) {
                badge.textContent = count > 99 ? '99+' : count;
                badge.style.display = 'flex';
            } else {
                badge.style.display = 'none';
            }
        }
    });
}

async function toggleFavorite(productId, button) {
    try {
        const response = await fetch('/favorites/toggle', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ productId })
        });
        const data = await response.json();
        if (data.success) {
            // Xóa sản phẩm khỏi grid với animation nếu vừa bỏ yêu thích
            const productCard = document.querySelector(`[data-product-id="${productId}"]`);
            if (productCard && data.isFavorite === false) {
                productCard.style.transform = 'scale(0.8)';
                productCard.style.opacity = '0';
                setTimeout(() => {
                    productCard.remove();
                    // Kiểm tra lại số lượng sản phẩm sau khi remove
                    const favoritesGrid = document.getElementById('favorites-grid');
                    const emptyFavorites = document.getElementById('empty-favorites');
                    const favoritesHeader = document.getElementById('favorites-header');
                    const clearAllBtn = document.getElementById('clear-all-favorites-btn');
                    const favoritesCount = document.getElementById('favorites-count-badge');
                    const productCards = favoritesGrid ? favoritesGrid.querySelectorAll('[data-product-id]') : [];
                    if (favoritesGrid && productCards.length === 0) {
                        if (favoritesGrid) favoritesGrid.style.display = 'none';
                        if (favoritesHeader) favoritesHeader.style.display = 'none';
                        if (clearAllBtn) clearAllBtn.style.display = 'none';
                        if (favoritesCount) favoritesCount.textContent = '0 sản phẩm';
                        if (emptyFavorites) {
                            emptyFavorites.style.display = 'block';
                            emptyFavorites.style.animation = 'fadeIn 0.5s ease-in-out';
                        }
                    }
                }, 300);
            }
            // Cập nhật số lượng yêu thích trong navigation
            if (typeof updateFavoritesCount === 'function') {
                updateFavoritesCount(data.favoritesCount);
            }
            // Hiển thị thông báo thành công
            if (typeof showToast === 'function') {
                showToast(data.isFavorite ? 'Đã thêm vào yêu thích' : 'Đã bỏ yêu thích sản phẩm', 'success');
            }
        } else {
            if (typeof showToast === 'function') {
                showToast(data.message || 'Có lỗi xảy ra', 'error');
            }
        }
    } catch (error) {
        console.error('Lỗi khi thay đổi trạng thái yêu thích:', error);
        if (typeof showToast === 'function') {
            showToast('Có lỗi xảy ra khi thay đổi trạng thái yêu thích', 'error');
        }
    }
}

async function addToCart(productId) {
    try {
        const response = await fetch('/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ productId, quantity: 1 })
        });

        const data = await response.json();
        
        if (data.success) {
            if (typeof showToast === 'function') {
                showToast('Đã thêm sản phẩm vào giỏ hàng', 'success');
            }
            if (typeof updateCartCount === 'function') {
                updateCartCount(data.cartCount);
            }
        } else {
            if (typeof showToast === 'function') {
                showToast(data.message || 'Có lỗi xảy ra', 'error');
            }
        }
    } catch (error) {
        console.error('Error:', error);
        if (typeof showToast === 'function') {
            showToast('Có lỗi xảy ra khi thêm sản phẩm', 'error');
        }
    }
}

async function clearAllFavorites() {
    if (!confirm('Bạn có chắc muốn xóa tất cả sản phẩm khỏi danh sách yêu thích?')) {
        return;
    }

    const button = event.target.closest('button');
    if (button) {
        button.classList.add('opacity-50', 'cursor-not-allowed');
        button.disabled = true;
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="ri-loader-4-line animate-spin"></i> Đang xóa...';
    }

    try {
        console.log('🔍 DEBUG: Bắt đầu xóa tất cả favorites');
        
        const response = await fetch('/favorites', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        });

        console.log('🔍 DEBUG: Response status:', response.status);
        console.log('🔍 DEBUG: Response ok:', response.ok);

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log('🔍 DEBUG: Response data:', data);
        
        if (data.success) {
            console.log('🔍 DEBUG: Xóa thành công, bắt đầu animation');
            
            // Xóa tất cả sản phẩm khỏi grid với animation
            const favoritesGrid = document.getElementById('favorites-grid');
            if (favoritesGrid) {
                const cards = favoritesGrid.querySelectorAll('[data-product-id]');
                console.log('🔍 DEBUG: Số lượng cards cần xóa:', cards.length);
                
                cards.forEach((card, index) => {
                    setTimeout(() => {
                        card.style.transform = 'scale(0.8)';
                        card.style.opacity = '0';
                        setTimeout(() => {
                            card.remove();
                        }, 300);
                    }, index * 100);
                });
                
                // Hiển thị trang trống sau khi xóa xong
                setTimeout(() => {
                    const emptyFavorites = document.getElementById('empty-favorites');
                    const favoritesHeader = document.getElementById('favorites-header');
                    const clearAllBtn = document.getElementById('clear-all-favorites-btn');
                    const favoritesCount = document.getElementById('favorites-count-badge');
                    const favoritesGrid = document.getElementById('favorites-grid');
                    if (emptyFavorites) {
                        emptyFavorites.style.display = 'block';
                        emptyFavorites.style.animation = 'fadeIn 0.5s ease-in-out';
                    }
                    if (favoritesHeader) favoritesHeader.style.display = 'none';
                    if (clearAllBtn) clearAllBtn.style.display = 'none';
                    if (favoritesCount) favoritesCount.textContent = '0 sản phẩm';
                    if (favoritesGrid) favoritesGrid.style.display = 'none';
                }, cards.length * 100 + 500);
            }
            
            // Cập nhật số lượng yêu thích trong navigation
            if (typeof updateFavoritesCount === 'function') {
                updateFavoritesCount(0);
            }
            
            // Hiển thị thông báo thành công
            if (typeof showToast === 'function') {
                showToast('Đã xóa tất cả sản phẩm khỏi danh sách yêu thích', 'success');
            } else {
                alert('Đã xóa tất cả sản phẩm khỏi danh sách yêu thích');
            }
        } else {
            console.error('🔍 DEBUG: Server trả về lỗi:', data.message);
            // Hiển thị thông báo lỗi
            if (typeof showToast === 'function') {
                showToast(data.message || 'Có lỗi xảy ra', 'error');
            } else {
                alert(data.message || 'Có lỗi xảy ra');
            }
        }
    } catch (error) {
        console.error('🔍 DEBUG: Lỗi khi xóa tất cả yêu thích:', error);
        if (typeof showToast === 'function') {
            showToast('Có lỗi xảy ra khi xóa tất cả yêu thích', 'error');
        } else {
            alert('Có lỗi xảy ra khi xóa tất cả yêu thích');
        }
    } finally {
        if (button) {
            button.classList.remove('opacity-50', 'cursor-not-allowed');
            button.disabled = false;
            button.innerHTML = '<i class="ri-delete-bin-line"></i><span>Xóa tất cả</span>';
        }
    }
}

// Add CSS animation for fadeIn
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
`;
document.head.appendChild(style);
</script>

<%- include('../includes/end.ejs') %>