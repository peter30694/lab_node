const nodemailer = require('nodemailer');
require('dotenv').config();

// T·∫°o transporter v·ªõi c·∫•u h√¨nh Gmail
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASSWORD
    }
});

// Ki·ªÉm tra k·∫øt n·ªëi mail
transporter.verify(function (error, success) {
    if (error) {
        console.log('L·ªói k·∫øt n·ªëi email:', error);
    } else {
        console.log('‚úÖ K·∫øt n·ªëi email th√†nh c√¥ng!');
    }
});

// Helper ƒë·ªÉ hi·ªÉn th·ªã t√™n ph∆∞∆°ng th·ª©c/thanh to√°n
function getPaymentMethodDisplay(method) {
    const methods = {
        'cod': 'Thanh to√°n khi nh·∫≠n h√†ng (COD)',
        'bank': 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
        'bank_transfer': 'Chuy·ªÉn kho·∫£n QR Code',
        'ewallet': 'V√≠ ƒëi·ªán t·ª≠',
        'credit': 'Th·∫ª t√≠n d·ª•ng/ghi n·ª£',
        'vnpay': 'Thanh to√°n qua VNPay'
    };
    return methods[method] || 'Kh√¥ng x√°c ƒë·ªãnh';
}

function getPaymentStatusDisplay(status) {
    const statuses = {
        'pending': 'Ch·ªù thanh to√°n',
        'awaiting_payment': 'Ch·ªù chuy·ªÉn kho·∫£n',
        'processing': 'ƒêang x·ª≠ l√Ω',
        'completed': 'ƒê√£ thanh to√°n',
        'paid': 'ƒê√£ thanh to√°n',
        'failed': 'Thanh to√°n th·∫•t b·∫°i',
        'refunded': 'ƒê√£ ho√†n ti·ªÅn'
    };
    return statuses[status] || 'Kh√¥ng x√°c ƒë·ªãnh';
}

// H√†m g·ª≠i email chung
const sendMail = async (to, subject, html) => {
  const mailOptions = {
    from: process.env.EMAIL_USER,
    to,
    subject,
    html
  };
  try {
    const info = await transporter.sendMail(mailOptions);
    console.log('üìß Email ƒë√£ g·ª≠i:', info.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå L·ªói khi g·ª≠i email:', error);
    return false;
  }
};

// G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng cho kh√°ch h√†ng
const sendOrderConfirmation = async (orderOrId, user) => {
    try {
        let order;
        const Order = require('../models/order');
        
        if (typeof orderOrId === 'string' || orderOrId instanceof require('mongodb').ObjectId) {
            order = await Order.findById(orderOrId);
        } else {
            order = orderOrId;
        }

        if (!order) {
            console.error('Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng ƒë·ªÉ g·ª≠i email x√°c nh·∫≠n:', orderOrId);
            return false;
        }

        const customerEmail = order.shippingInfo?.email || user.email;
        const customerName = order.shippingInfo?.name || user.name;
        
        const subject = 'üéâ X√°c nh·∫≠n ƒë∆°n h√†ng th√†nh c√¥ng - Pet Store';
        const html = `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #28a745; margin: 0;">üéâ ƒê·∫∑t h√†ng th√†nh c√¥ng!</h1>
                            <p style="color: #666; margin: 10px 0;">C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i Pet Store</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #333; margin-top: 0;">üìã Chi ti·∫øt ƒë∆°n h√†ng</h2>
                            <p><strong>M√£ ƒë∆°n h√†ng:</strong> <span style="color: #007bff; font-weight: bold;">${order._id}</span></p>
                            <p><strong>Ph√≠ v·∫≠n chuy·ªÉn:</strong> ${(order.shippingFee || 0).toLocaleString('vi-VN')} VNƒê</p>
                            <p><strong>T·ªïng ti·ªÅn:</strong> <span style="color: #dc3545; font-weight: bold; font-size: 18px;">${order.totalPrice.toLocaleString('vi-VN')} VNƒê</span></p>
                            <p><strong>Th·ªùi gian ƒë·∫∑t h√†ng:</strong> ${new Date(order.createdAt).toLocaleString('vi-VN')}</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üöö Th√¥ng tin giao h√†ng</h3>
                            <p><strong>H·ªç t√™n:</strong> ${order.shippingInfo?.name}</p>
                            <p><strong>ƒêi·ªán tho·∫°i:</strong> ${order.shippingInfo?.phone}</p>
                            <p><strong>Email:</strong> ${order.shippingInfo?.email}</p>
                            <p><strong>ƒê·ªãa ch·ªâ:</strong> ${order.shippingInfo?.address}</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üí≥ Th√¥ng tin thanh to√°n</h3>
                            <p><strong>Ph∆∞∆°ng th·ª©c:</strong> ${getPaymentMethodDisplay(order.paymentMethod)}</p>
                            <p><strong>Tr·∫°ng th√°i:</strong> <span style="color: #28a745; font-weight: bold;">${getPaymentStatusDisplay(order.paymentStatus || 'pending')}</span></p>
                            ${order.paymentMethod === 'bank' && order.paymentStatus === 'awaiting' ? `
                                <div style="background-color: #e3f2fd; padding: 15px; border-left: 4px solid #2196f3; margin: 10px 0;">
                                    <h4 style="margin-top: 0;">üè¶ Th√¥ng tin chuy·ªÉn kho·∫£n</h4>
                                    <p><strong>Ng√¢n h√†ng:</strong> Vietcombank</p>
                                    <p><strong>S·ªë t√†i kho·∫£n:</strong> 1234567890</p>
                                    <p><strong>Ch·ªß t√†i kho·∫£n:</strong> Pet Store</p>
                                    <p><strong>N·ªôi dung:</strong> DH${order._id}</p>
                                    <p><strong>S·ªë ti·ªÅn:</strong> ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                                </div>
                            ` : ''}
                            ${order.paymentMethod === 'ewallet' && order.paymentStatus === 'awaiting' ? `
                                <div style="background-color: #e8f5e8; padding: 15px; border-left: 4px solid #4caf50; margin: 10px 0;">
                                    <h4 style="margin-top: 0;">üì± Th√¥ng tin thanh to√°n v√≠ ƒëi·ªán t·ª≠</h4>
                                    <p><strong>T√™n:</strong> Pet Store</p>
                                    <p><strong>N·ªôi dung:</strong> DH${order._id}</p>
                                    <p><strong>S·ªë ti·ªÅn:</strong> ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                                </div>
                            ` : ''}
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üõçÔ∏è Danh s√°ch s·∫£n ph·∫©m</h3>
                            <div style="margin-bottom: 10px;">
                                ${order.items.map(item => `
                                    <div style="border-bottom: 1px solid #eee; padding: 10px 0;">
                                        <p style="margin: 5px 0;"><strong>${item.title}</strong></p>
                                        <p style="margin: 5px 0; color: #666;">S·ªë l∆∞·ª£ng: ${item.quantity} | Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê</p>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                        
                        <div style="background-color: #e8f5e8; padding: 20px; border-radius: 8px; text-align: center;">
                            <h3 style="color: #28a745; margin-top: 0;">‚úÖ Tr·∫°ng th√°i ƒë∆°n h√†ng</h3>
                            <p style="font-size: 18px; font-weight: bold; color: #28a745;">${getOrderStatusDisplay(order.status || 'pending')}</p>
                            <p style="color: #666;">Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm nh·∫•t!</p>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <p style="color: #666; margin: 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                        </div>
                    </div>
                </div>
            `;
        // Log chi ti·∫øt tr∆∞·ªõc khi g·ª≠i mail
        console.log('[EMAIL][X√ÅC NH·∫¨N ƒê∆†N H√ÄNG] Chu·∫©n b·ªã g·ª≠i t·ªõi:', customerEmail);
        console.log('[EMAIL][X√ÅC NH·∫¨N ƒê∆†N H√ÄNG] Ti√™u ƒë·ªÅ:', subject);
        console.log('[EMAIL][X√ÅC NH·∫¨N ƒê∆†N H√ÄNG] N·ªôi dung r√∫t g·ªçn:', html.slice(0, 200) + '...');
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: customerEmail,
            subject: subject,
            html: html
        };
        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email x√°c nh·∫≠n ƒë∆°n h√†ng ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email x√°c nh·∫≠n:', error);
        return false;
    }
};

// G·ª≠i email m·∫≠t kh·∫©u m·ªõi
const sendNewPassword = async (user, newPassword) => {
    try {
        const loginUrl = `${process.env.APP_URL || 'http://localhost:3000'}/auth/login`;
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: user.email,
            subject: 'üîê M·∫≠t kh·∫©u m·ªõi - Pet Store',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #28a745; margin: 0;">üîê M·∫≠t kh·∫©u m·ªõi</h1>
                            <p style="color: #666; margin: 10px 0;">Xin ch√†o ${user.name}!</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #333; margin-top: 0;">üìß Y√™u c·∫ßu l·∫•y l·∫°i m·∫≠t kh·∫©u</h2>
                            <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu l·∫•y l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i Pet Store.</p>
                            <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y v√† li√™n h·ªá h·ªó tr·ª£ ngay.</p>
                        </div>
                        
                        <div style="background-color: #e8f5e8; padding: 20px; border-radius: 8px; margin-bottom: 20px; text-align: center;">
                            <h3 style="color: #28a745; margin-top: 0;">üî¢ M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n</h3>
                            <div style="background-color: #ffffff; border: 2px dashed #28a745; padding: 15px; margin: 15px 0; border-radius: 8px;">
                                <p style="margin: 0; font-size: 24px; font-weight: bold; color: #28a745; letter-spacing: 3px; font-family: monospace;">
                                    ${newPassword}
                                </p>
                            </div>
                            <p style="color: #666; font-size: 14px;">M·∫≠t kh·∫©u n√†y c√≥ 6 ch·ªØ s·ªë</p>
                        </div>
                        
                        <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin-bottom: 20px; text-align: center;">
                            <h3 style="color: #1976d2; margin-top: 0;">üöÄ ƒêƒÉng nh·∫≠p ngay</h3>
                            <p style="margin-bottom: 20px;">Click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒëƒÉng nh·∫≠p v·ªõi m·∫≠t kh·∫©u m·ªõi:</p>
                            <a href="${loginUrl}" style="display: inline-block; background-color: #28a745; color: white; padding: 12px 30px; text-decoration: none; border-radius: 8px; font-weight: bold; font-size: 16px;">
                                üîê ƒêƒÉng nh·∫≠p ngay
                            </a>
                        </div>
                        
                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #856404; margin-top: 0;">‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng</h3>
                            <ul style="color: #856404; margin: 0; padding-left: 20px;">
                                <li>M·∫≠t kh·∫©u n√†y ch·ªâ ƒë∆∞·ª£c g·ª≠i qua email</li>
                                <li>Vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng</li>
                                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u n√†y v·ªõi ng∆∞·ªùi kh√°c</li>
                                <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu, vui l√≤ng li√™n h·ªá h·ªó tr·ª£ ngay</li>
                            </ul>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üîó Link ƒëƒÉng nh·∫≠p thay th·∫ø</h3>
                            <p>N·∫øu n√∫t tr√™n kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ copy link sau v√†o tr√¨nh duy·ªát:</p>
                            <p style="word-break: break-all; background-color: #e9ecef; padding: 10px; border-radius: 4px; font-family: monospace; font-size: 12px; color: #495057;">
                                ${loginUrl}
                            </p>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <p style="color: #666; margin: 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                        </div>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email m·∫≠t kh·∫©u m·ªõi ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email m·∫≠t kh·∫©u m·ªõi:', error);
        return false;
    }
};

// G·ª≠i email th√¥ng b√°o ƒë∆°n h√†ng m·ªõi cho admin
const sendNewOrderNotification = async (order, user) => {
    try {
        const customerName = order.shippingInfo?.name || user.name;
        const customerEmail = order.shippingInfo?.email || user.email;
        
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: process.env.ADMIN_EMAIL,
            subject: `üîî ƒê∆°n h√†ng m·ªõi t·ª´ ${customerName} - ${order._id}`,
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #007bff; margin: 0;">üîî ƒê∆°n h√†ng m·ªõi!</h1>
                            <p style="color: #666; margin: 10px 0;">C√≥ ƒë∆°n h√†ng m·ªõi c·∫ßn x·ª≠ l√Ω</p>
                        </div>
                        
                        <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #1976d2; margin-top: 0;">üìã Th√¥ng tin ƒë∆°n h√†ng</h2>
                            <p><strong>M√£ ƒë∆°n h√†ng:</strong> <span style="color: #007bff; font-weight: bold;">${order._id}</span></p>
                            <p><strong>Kh√°ch h√†ng:</strong> ${customerName} (${customerEmail})</p>
                            <p><strong>Ph√≠ v·∫≠n chuy·ªÉn:</strong> ${(order.shippingFee || 0).toLocaleString('vi-VN')} VNƒê</p>
                            <p><strong>T·ªïng ti·ªÅn:</strong> <span style="color: #dc3545; font-weight: bold; font-size: 18px;">${order.totalPrice.toLocaleString('vi-VN')} VNƒê</span></p>
                            <p><strong>Th·ªùi gian:</strong> ${new Date(order.createdAt).toLocaleString('vi-VN')}</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üöö Th√¥ng tin giao h√†ng</h3>
                            <p><strong>H·ªç t√™n:</strong> ${order.shippingInfo?.name}</p>
                            <p><strong>ƒêi·ªán tho·∫°i:</strong> ${order.shippingInfo?.phone}</p>
                            <p><strong>Email:</strong> ${order.shippingInfo?.email}</p>
                            <p><strong>ƒê·ªãa ch·ªâ:</strong> ${order.shippingInfo?.address}</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üí≥ Th√¥ng tin thanh to√°n</h3>
                            <p><strong>Ph∆∞∆°ng th·ª©c:</strong> ${getPaymentMethodDisplay(order.paymentMethod)}</p>
                            <p><strong>Tr·∫°ng th√°i:</strong> <span style="color: #ffc107; font-weight: bold;">${getPaymentStatusDisplay(order.paymentStatus)}</span></p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üõçÔ∏è Chi ti·∫øt s·∫£n ph·∫©m</h3>
                            <div style="margin-bottom: 10px;">
                                ${order.items.map(item => `
                                    <div style="border-bottom: 1px solid #eee; padding: 10px 0;">
                                        <p style="margin: 5px 0;"><strong>${item.title}</strong></p>
                                        <p style="margin: 5px 0; color: #666;">S·ªë l∆∞·ª£ng: ${item.quantity} | Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê</p>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                        
                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; text-align: center;">
                            <h3 style="color: #856404; margin-top: 0;">‚ö° H√†nh ƒë·ªông c·∫ßn thi·∫øt</h3>
                            <p style="font-size: 16px; color: #856404;">Vui l√≤ng x·ª≠ l√Ω ƒë∆°n h√†ng n√†y s·ªõm nh·∫•t!</p>
                            <p style="color: #666; margin: 10px 0;">Truy c·∫≠p admin panel ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i</p>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <p style="color: #666; margin: 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store Admin</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng</p>
                        </div>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email th√¥ng b√°o ƒë∆°n h√†ng admin ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email th√¥ng b√°o admin:', error);
        return false;
    }
};

// G·ª≠i email th√¥ng b√°o ƒë·ªïi m·∫≠t kh·∫©u
const sendPasswordChangeNotification = async (user, newPassword) => {
    try {
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: user.email,
            subject: 'üîê M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi - Pet Store',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #007bff; margin: 0;">üîê M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi</h1>
                            <p style="color: #666; margin: 10px 0;">Th√¥ng b√°o t·ª´ h·ªá th·ªëng Pet Store</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #333; margin-top: 0;">üëã Xin ch√†o ${user.name}!</h2>
                            <p>M·∫≠t kh·∫©u t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi b·ªüi qu·∫£n tr·ªã vi√™n.</p>
                        </div>
                        
                        <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #333; margin-top: 0;">üîë Th√¥ng tin m·∫≠t kh·∫©u m·ªõi</h3>
                            ${newPassword ? `<p><strong>M·∫≠t kh·∫©u m·ªõi:</strong> <span style="color: #007bff; font-weight: bold; font-family: monospace;">${newPassword}</span></p>` : ''}
                            <p><strong>Th·ªùi gian thay ƒë·ªïi:</strong> ${new Date().toLocaleString('vi-VN')}</p>
                        </div>
                        
                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #856404; margin-top: 0;">‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t</h3>
                            <ul style="color: #856404;">
                                <li>Vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u ngay sau khi ƒëƒÉng nh·∫≠p</li>
                                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi ng∆∞·ªùi kh√°c</li>
                                <li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n</li>
                            </ul>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <p style="color: #666; margin: 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                        </div>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u:', error);
        return false;
    }
};

// G·ª≠i email ch√†o m·ª´ng
const sendWelcomeEmail = async (user) => {
    try {
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: user.email,
            subject: 'üéâ Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Pet Store!',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #28a745; margin: 0;">üéâ Ch√†o m·ª´ng b·∫°n!</h1>
                            <p style="color: #666; margin: 10px 0;">C·∫£m ∆°n b·∫°n ƒë√£ tham gia c·ªông ƒë·ªìng Pet Store</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #333; margin-top: 0;">üëã Xin ch√†o ${user.name}!</h2>
                            <p>Ch√∫ng t√¥i r·∫•t vui m·ª´ng ch√†o ƒë√≥n b·∫°n ƒë·∫øn v·ªõi Pet Store - n∆°i y√™u th∆∞∆°ng v√† chƒÉm s√≥c t·ªët nh·∫•t cho nh·ªØng ng∆∞·ªùi b·∫°n b·ªën ch√¢n c·ªßa b·∫°n.</p>
                        </div>
                        
                        <div style="background-color: #e8f5e8; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #28a745; margin-top: 0;">üêæ T·∫°i sao ch·ªçn Pet Store?</h3>
                            <ul style="color: #28a745;">
                                <li>‚úÖ S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao</li>
                                <li>üöö Giao h√†ng nhanh ch√≥ng</li>
                                <li>üí∞ Gi√° c·∫£ h·ª£p l√Ω</li>
                                <li>üéÅ Nhi·ªÅu ∆∞u ƒë√£i h·∫•p d·∫´n</li>
                                <li>üìû H·ªó tr·ª£ 24/7</li>
                            </ul>
                        </div>
                        
                        <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #007bff; margin-top: 0;">üéÅ ∆Øu ƒë√£i ƒë·∫∑c bi·ªát cho b·∫°n</h3>
                            <p>Nh√¢n d·ªãp ch√†o m·ª´ng b·∫°n, ch√∫ng t√¥i t·∫∑ng b·∫°n:</p>
                            <ul style="color: #007bff;">
                                <li>üéØ Gi·∫£m 10% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n</li>
                                <li>üéÅ Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn cho ƒë∆°n h√†ng tr√™n 500k</li>
                                <li>üìß Nh·∫≠n th√¥ng b√°o ∆∞u ƒë√£i m·ªõi nh·∫•t</li>
                            </ul>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <a href="${process.env.APP_URL}/products" style="background-color: #28a745; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px;">üõçÔ∏è Mua s·∫Øm ngay</a>
                            <p style="color: #666; margin: 10px 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                        </div>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email ch√†o m·ª´ng ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email ch√†o m·ª´ng:', error);
        return false;
    }
};

// G·ª≠i email th√¥ng b√°o reset m·∫≠t kh·∫©u
const sendPasswordResetNotification = async (user, newPassword) => {
    try {
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: user.email,
            subject: 'üîê M·∫≠t kh·∫©u m·ªõi - Pet Store',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
                    <div style="background-color: #ffffff; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #dc3545; margin: 0;">üîê M·∫≠t kh·∫©u m·ªõi</h1>
                            <p style="color: #666; margin: 10px 0;">M·∫≠t kh·∫©u t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c reset</p>
                        </div>
                        
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h2 style="color: #333; margin-top: 0;">üëã Xin ch√†o ${user.name}!</h2>
                            <p>M·∫≠t kh·∫©u t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c reset b·ªüi qu·∫£n tr·ªã vi√™n.</p>
                        </div>
                        
                        <div style="background-color: #f8d7da; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #721c24; margin-top: 0;">üîë Th√¥ng tin ƒëƒÉng nh·∫≠p m·ªõi</h3>
                            <p><strong>Email:</strong> ${user.email}</p>
                            <p><strong>M·∫≠t kh·∫©u m·ªõi:</strong> <span style="color: #dc3545; font-weight: bold; font-family: monospace;">${newPassword}</span></p>
                            <p><strong>Th·ªùi gian reset:</strong> ${new Date().toLocaleString('vi-VN')}</p>
                        </div>
                        
                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                            <h3 style="color: #856404; margin-top: 0;">‚ö†Ô∏è H∆∞·ªõng d·∫´n b·∫£o m·∫≠t</h3>
                            <ol style="color: #856404;">
                                <li>ƒêƒÉng nh·∫≠p ngay v·ªõi m·∫≠t kh·∫©u m·ªõi</li>
                                <li>Thay ƒë·ªïi m·∫≠t kh·∫©u trong ph·∫ßn c√†i ƒë·∫∑t t√†i kho·∫£n</li>
                                <li>Kh√¥ng chia s·∫ª th√¥ng tin ƒëƒÉng nh·∫≠p</li>
                                <li>B√°o c√°o ngay n·∫øu c√≥ ho·∫°t ƒë·ªông b·∫•t th∆∞·ªùng</li>
                            </ol>
                        </div>
                        
                        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                            <a href="${process.env.APP_URL}/login" style="background-color: #dc3545; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px;">üîê ƒêƒÉng nh·∫≠p ngay</a>
                            <p style="color: #666; margin: 10px 0;">Tr√¢n tr·ªçng,<br><strong>Pet Store</strong></p>
                            <p style="color: #999; font-size: 12px; margin: 10px 0;">N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                        </div>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email th√¥ng b√°o reset m·∫≠t kh·∫©u ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email th√¥ng b√°o reset m·∫≠t kh·∫©u:', error);
        return false;
    }
};

// G·ª≠i email x√°c nh·∫≠n ƒëƒÉng k√Ω
const sendSignupConfirmation = async function(user) {
    const subject = 'üéâ Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Pet Store - T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!';
    
    // T·∫°o m·∫≠t kh·∫©u t·∫°m th·ªùi n·∫øu user ƒë∆∞·ª£c t·∫°o b·ªüi admin
    const tempPassword = user.tempPassword || 'M·∫≠t kh·∫©u b·∫°n ƒë√£ nh·∫≠p khi ƒëƒÉng k√Ω';
    const isAdminCreated = user.tempPassword ? true : false;
    
    const html = `
        <!DOCTYPE html>
        <html lang="vi">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Pet Store</title>
            <style>
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    margin: 0;
                    padding: 0;
                    background-color: #f8f9fa;
                }
                .container {
                    max-width: 600px;
                    margin: 0 auto;
                    background-color: #ffffff;
                    border-radius: 12px;
                    overflow: hidden;
                    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
                }
                .header {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 40px 30px;
                    text-align: center;
                }
                .header h1 {
                    margin: 0;
                    font-size: 28px;
                    font-weight: 700;
                }
                .header p {
                    margin: 10px 0 0 0;
                    font-size: 16px;
                    opacity: 0.9;
                }
                .content {
                    padding: 40px 30px;
                }
                .welcome-section {
                    text-align: center;
                    margin-bottom: 30px;
                }
                .welcome-section h2 {
                    color: #2c3e50;
                    font-size: 24px;
                    margin-bottom: 10px;
                }
                .welcome-section p {
                    color: #7f8c8d;
                    font-size: 16px;
                    margin: 0;
                }
                .account-info {
                    background-color: #f8f9fa;
                    border-radius: 8px;
                    padding: 25px;
                    margin: 25px 0;
                    border-left: 4px solid #3498db;
                }
                .account-info h3 {
                    color: #2c3e50;
                    margin-top: 0;
                    font-size: 18px;
                    margin-bottom: 15px;
                }
                .info-row {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 8px 0;
                    border-bottom: 1px solid #ecf0f1;
                }
                .info-row:last-child {
                    border-bottom: none;
                }
                .info-label {
                    font-weight: 600;
                    color: #34495e;
                }
                .info-value {
                    color: #2c3e50;
                    font-weight: 500;
                }
                .password-section {
                    background-color: #fff3cd;
                    border: 1px solid #ffeaa7;
                    border-radius: 8px;
                    padding: 20px;
                    margin: 25px 0;
                }
                .password-section h4 {
                    color: #856404;
                    margin-top: 0;
                    font-size: 16px;
                    margin-bottom: 10px;
                }
                .password-section p {
                    color: #856404;
                    margin: 0;
                    font-size: 14px;
                }
                .features-section {
                    margin: 30px 0;
                }
                .features-section h3 {
                    color: #2c3e50;
                    font-size: 18px;
                    margin-bottom: 15px;
                }
                .feature-list {
                    list-style: none;
                    padding: 0;
                    margin: 0;
                }
                .feature-list li {
                    padding: 8px 0;
                    color: #7f8c8d;
                    position: relative;
                    padding-left: 25px;
                }
                .feature-list li:before {
                    content: "‚úì";
                    position: absolute;
                    left: 0;
                    color: #27ae60;
                    font-weight: bold;
                }
                .cta-section {
                    text-align: center;
                    margin: 30px 0;
                }
                .cta-button {
                    display: inline-block;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    text-decoration: none;
                    padding: 15px 30px;
                    border-radius: 25px;
                    font-weight: 600;
                    font-size: 16px;
                    transition: all 0.3s ease;
                }
                .cta-button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
                }
                .footer {
                    background-color: #f8f9fa;
                    padding: 25px 30px;
                    text-align: center;
                    border-top: 1px solid #ecf0f1;
                }
                .footer p {
                    margin: 0;
                    color: #7f8c8d;
                    font-size: 14px;
                }
                .social-links {
                    margin-top: 15px;
                }
                .social-links a {
                    color: #3498db;
                    text-decoration: none;
                    margin: 0 10px;
                    font-weight: 500;
                }
                .warning-box {
                    background-color: #f8d7da;
                    border: 1px solid #f5c6cb;
                    border-radius: 8px;
                    padding: 15px;
                    margin: 20px 0;
                }
                .warning-box h4 {
                    color: #721c24;
                    margin-top: 0;
                    font-size: 16px;
                    margin-bottom: 8px;
                }
                .warning-box p {
                    color: #721c24;
                    margin: 0;
                    font-size: 14px;
                }
                @media (max-width: 600px) {
                    .container {
                        margin: 10px;
                        border-radius: 8px;
                    }
                    .header, .content, .footer {
                        padding: 20px;
                    }
                    .header h1 {
                        font-size: 24px;
                    }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi Pet Store!</h1>
                    <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng</p>
                </div>
                
                <div class="content">
                    <div class="welcome-section">
                        <h2>Xin ch√†o ${user.name}! üëã</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ch·ªçn Pet Store l√†m n∆°i mua s·∫Øm cho th√∫ c∆∞ng y√™u qu√Ω</p>
                    </div>
                    
                    <div class="account-info">
                        <h3>üìã Th√¥ng tin t√†i kho·∫£n</h3>
                        <div class="info-row">
                            <span class="info-label">H·ªç t√™n:</span>
                            <span class="info-value">${user.name}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Email:</span>
                            <span class="info-value">${user.email}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Ng√†y t·∫°o:</span>
                            <span class="info-value">${new Date().toLocaleDateString('vi-VN')}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Vai tr√≤:</span>
                            <span class="info-value">${user.role === 'admin' ? 'Qu·∫£n tr·ªã vi√™n' : 'Kh√°ch h√†ng'}</span>
                        </div>
                    </div>
                    
                    ${isAdminCreated ? `
                        <div class="password-section">
                            <h4>üîê Th√¥ng tin ƒëƒÉng nh·∫≠p</h4>
                            <p><strong>M·∫≠t kh·∫©u t·∫°m th·ªùi:</strong> ${tempPassword}</p>
                            <p><em>Vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u sau khi ƒëƒÉng nh·∫≠p l·∫ßu ƒë·∫ßu ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n.</em></p>
                        </div>
                    ` : `
                        <div class="password-section">
                            <h4>üîê Th√¥ng tin ƒëƒÉng nh·∫≠p</h4>
                            <p><strong>M·∫≠t kh·∫©u:</strong> ${tempPassword}</p>
                            <p><em>H√£y gi·ªØ m·∫≠t kh·∫©u an to√†n v√† kh√¥ng chia s·∫ª v·ªõi ng∆∞·ªùi kh√°c.</em></p>
                        </div>
                    `}
                    
                    <div class="features-section">
                        <h3>‚ú® Nh·ªØng g√¨ b·∫°n c√≥ th·ªÉ l√†m</h3>
                        <ul class="feature-list">
                            <li>Mua s·∫Øm s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cho th√∫ c∆∞ng</li>
                            <li>ƒê·∫∑t h√†ng online v·ªõi giao h√†ng t·∫≠n n∆°i</li>
                            <li>Thanh to√°n an to√†n v·ªõi nhi·ªÅu ph∆∞∆°ng th·ª©c</li>
                            <li>Theo d√µi ƒë∆°n h√†ng tr·ª±c tuy·∫øn</li>
                            <li>Nh·∫≠n th√¥ng b√°o v·ªÅ ƒë∆°n h√†ng qua email</li>
                            <li>T√≠ch l≈©y ƒëi·ªÉm th∆∞·ªüng khi mua s·∫Øm</li>
                        </ul>
                    </div>
                    
                    <div class="cta-section">
                        <a href="${process.env.BASE_URL || 'http://localhost:3000'}/login" class="cta-button">
                            üöÄ B·∫Øt ƒë·∫ßu mua s·∫Øm ngay
                        </a>
                    </div>
                    
                    ${isAdminCreated ? `
                        <div class="warning-box">
                            <h4>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng</h4>
                            <p>T√†i kho·∫£n n√†y ƒë∆∞·ª£c t·∫°o b·ªüi qu·∫£n tr·ªã vi√™n. Vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u ngay sau khi ƒëƒÉng nh·∫≠p l·∫ßu ƒë·∫ßu ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n.</p>
                        </div>
                    ` : ''}
                </div>
                
                <div class="footer">
                    <p>¬© ${new Date().getFullYear()} Pet Store. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@petstore.com</p>
                    <div class="social-links">
                        <a href="#">Facebook</a> | 
                        <a href="#">Instagram</a> | 
                        <a href="#">Zalo</a>
                    </div>
                </div>
            </div>
        </body>
        </html>
    `;
    
    return sendMail(user.email, subject, html);
};

// G·ª≠i email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i ƒë∆°n h√†ng
const sendOrderStatusUpdate = async (order, user, oldStatus, newStatus) => {
    try {
        const customerEmail = order.shippingInfo?.email || user.email;
        const customerName = order.shippingInfo?.name || user.name;
        
        // X√°c ƒë·ªãnh n·ªôi dung email d·ª±a tr√™n thay ƒë·ªïi tr·∫°ng th√°i
        let subject = '';
        let message = '';
        
        switch (newStatus) {
            case 'confirmed':
                if (oldStatus === 'pending') {
                    subject = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x√°c nh·∫≠n - Pet Store';
                    message = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x√°c nh·∫≠n.';
                }
                break;
            case 'shipping':
                if (oldStatus === 'confirmed') {
                    subject = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c giao - Pet Store';
                    message = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c giao.';
                }
                break;
            case 'delivered': // Th√™m x·ª≠ l√Ω tr·∫°ng th√°i ho√†n t·∫•t giao h√†ng
                subject = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng - Pet Store';
                message = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng.';
                break;
            case 'cancelled':
                subject = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy - Pet Store';
                message = 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy.';
                break;
            default:
                return false; // Kh√¥ng g·ª≠i email cho c√°c tr·∫°ng th√°i kh√°c
        }
        
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: customerEmail,
            subject: subject,
            html: `
                <h1>Xin ch√†o ${customerName}!</h1>
                <p>${message}</p>
                <h2>Th√¥ng tin ƒë∆°n h√†ng:</h2>
                <p>M√£ ƒë∆°n h√†ng: ${order._id}</p>
                <p>Tr·∫°ng th√°i m·ªõi: ${getOrderStatusDisplay(newStatus)}</p>
                <p>Th·ªùi gian c·∫≠p nh·∫≠t: ${new Date().toLocaleString('vi-VN')}</p>
                <h3>Chi ti·∫øt ƒë∆°n h√†ng:</h3>
                <ul>
                    ${order.items.map(item => `
                        <li>
                            ${item.title} - S·ªë l∆∞·ª£ng: ${item.quantity} - 
                            Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê
                        </li>
                    `).join('')}
                </ul>
                <p>T·ªïng ti·ªÅn: ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                <p>Tr√¢n tr·ªçng,<br>Pet Store</p>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log(`üìß Email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i ƒë∆°n h√†ng ƒë√£ g·ª≠i: ${oldStatus} ‚Üí ${newStatus}`, info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i:', error);
        return false;
    }
};

// G·ª≠i email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n
const sendPaymentStatusUpdate = async (order, user, oldPaymentStatus, newPaymentStatus) => {
    try {
        const customerEmail = order.shippingInfo?.email || user.email;
        const customerName = order.shippingInfo?.name || user.name;
        
        // X√°c ƒë·ªãnh n·ªôi dung email d·ª±a tr√™n thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n
        let subject = '';
        let message = '';
        
        switch (newPaymentStatus) {
            case 'paid':
                if (oldPaymentStatus === 'pending' || oldPaymentStatus === 'awaiting') {
                    subject = 'B·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng - Pet Store';
                    message = 'B·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng.';
                }
                break;
            case 'failed':
                subject = 'Thanh to√°n kh√¥ng th√†nh c√¥ng - Pet Store';
                message = 'Thanh to√°n kh√¥ng th√†nh c√¥ng. Vui l√≤ng th·ª≠ l·∫°i.';
                break;
            default:
                return false; // Kh√¥ng g·ª≠i email cho c√°c tr·∫°ng th√°i kh√°c
        }
        
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: customerEmail,
            subject: subject,
            html: `
                <h1>Xin ch√†o ${customerName}!</h1>
                <p>${message}</p>
                <h2>Th√¥ng tin ƒë∆°n h√†ng:</h2>
                <p>M√£ ƒë∆°n h√†ng: ${order._id}</p>
                <p>Tr·∫°ng th√°i thanh to√°n m·ªõi: ${getPaymentStatusDisplay(newPaymentStatus)}</p>
                <p>Th·ªùi gian c·∫≠p nh·∫≠t: ${new Date().toLocaleString('vi-VN')}</p>
                <h3>Chi ti·∫øt ƒë∆°n h√†ng:</h3>
                <ul>
                    ${order.items.map(item => `
                        <li>
                            ${item.title} - S·ªë l∆∞·ª£ng: ${item.quantity} - 
                            Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê
                        </li>
                    `).join('')}
                </ul>
                <p>T·ªïng ti·ªÅn: ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                <p>Tr√¢n tr·ªçng,<br>Pet Store</p>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log(`üìß Email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n ƒë√£ g·ª≠i: ${oldPaymentStatus} ‚Üí ${newPaymentStatus}`, info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n:', error);
        return false;
    }
};

// Helper ƒë·ªÉ hi·ªÉn th·ªã tr·∫°ng th√°i ƒë∆°n h√†ng
function getOrderStatusDisplay(status) {
    const statuses = {
        'pending': 'Ch·ªù x√°c nh·∫≠n',
        'confirmed': 'ƒêang x√°c nh·∫≠n',
        'shipping': 'ƒêang giao',
        'delivered': 'ƒê√£ giao', // B·ªï sung tr·∫°ng th√°i n√†y
        'completed': 'ƒê√£ giao',
        'cancelled': 'ƒê√£ h·ªßy'
    };
    return statuses[status] || 'Kh√¥ng x√°c ƒë·ªãnh';
}

// H√†m g·ª≠i email ƒë∆°n gi·∫£n
const sendEmail = async (to, subject, html) => {
  return sendMail(to, subject, html);
};

// G·ª≠i email x√°c nh·∫≠n booking
const sendBookingApproved = async (user, service, booking) => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
      <div style="background-color: #ffffff; padding: 30px; border-radius: 10px;">
        <h2 style="color: #28a745;">ƒê·∫∑t l·ªãch d·ªãch v·ª• ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!</h2>
        <p>Xin ch√†o <b>${user.name}</b>,</p>
        <p>ƒê·∫∑t l·ªãch d·ªãch v·ª• <b>${service.name}</b> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n.</p>
        <ul>
          <li><b>Ng√†y:</b> ${booking.bookingDate ? new Date(booking.bookingDate).toLocaleDateString('vi-VN') : ''}</li>
          <li><b>Gi·ªù:</b> ${booking.timeSlot?.start && booking.timeSlot?.end ? booking.timeSlot.start + ' - ' + booking.timeSlot.end : ''}</li>
          <li><b>Th√∫ c∆∞ng:</b> ${booking.customerInfo?.petInfo?.name || ''} (${booking.customerInfo?.petInfo?.type || ''})</li>
          <li><b>Ghi ch√∫:</b> ${booking.notes || ''}</li>
        </ul>
        <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•!</p>
      </div>
    </div>
  `;
  return sendMail(user.email, 'ƒê·∫∑t l·ªãch d·ªãch v·ª• ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n', html);
};

// G·ª≠i email th√¥ng b√°o ƒë∆°n h√†ng b·ªã t·ª´ ch·ªëi
const sendBookingRejected = async (user, service, booking) => {
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
      <div style="background-color: #ffffff; padding: 30px; border-radius: 10px;">
        <h2 style="color: #dc3545;">R·∫•t ti·∫øc, ƒë·∫∑t l·ªãch d·ªãch v·ª• c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi</h2>
        <p>Xin ch√†o <b>${user.name}</b>,</p>
        <p>Ch√∫ng t√¥i xin l·ªói v√¨ kh√¥ng th·ªÉ x√°c nh·∫≠n ƒë·∫∑t l·ªãch d·ªãch v·ª• <b>${service.name}</b> c·ªßa b·∫°n.</p>
        <ul>
          <li><b>Ng√†y:</b> ${booking.bookingDate ? new Date(booking.bookingDate).toLocaleDateString('vi-VN') : ''}</li>
          <li><b>Gi·ªù:</b> ${booking.timeSlot?.start && booking.timeSlot?.end ? booking.timeSlot.start + ' - ' + booking.timeSlot.end : ''}</li>
          <li><b>Th√∫ c∆∞ng:</b> ${booking.customerInfo?.petInfo?.name || ''} (${booking.customerInfo?.petInfo?.type || ''})</li>
          <li><b>Ghi ch√∫:</b> ${booking.notes || ''}</li>
        </ul>
        <p>N·∫øu c·∫ßn h·ªó tr·ª£ th√™m, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
        <p>Tr√¢n tr·ªçng c·∫£m ∆°n!</p>
      </div>
    </div>
  `;
  return sendMail(user.email, 'ƒê·∫∑t l·ªãch d·ªãch v·ª• b·ªã t·ª´ ch·ªëi', html);
};

// Xu·∫•t module
module.exports = {
    sendOrderConfirmation,
    sendNewPassword,
    sendNewOrderNotification,
    sendPasswordChangeNotification,
    sendSignupConfirmation,
    sendOrderStatusUpdate,
    sendPaymentStatusUpdate,
    sendEmail,
    sendWelcomeEmail,
    sendPasswordResetNotification,
    sendBookingApproved,
    sendBookingRejected
};
